# Задача 1:
# Даны значения зарплат из выборки выпускников: 
# 100, 80, 75, 77, 89, 33, 45, 25, 65, 17, 30, 24, 57, 55, 70, 75, 65, 84, 90, 150. 
# Посчитать (желательно без использования статистических методов наподобие std, var, mean) 
# среднее арифметическое, 
# медиану, 
# среднее квадратичное отклонение, 
# смещенную и несмещенную оценки дисперсий для данной выборки, 
# интерквартильное расстояние. 
# Вывести график boxplot по выборке.
import numpy as np
import scipy.stats as stats
z= np.array([100, 80, 75, 77, 89, 33, 45, 25, 65, 17, 30, 24, 57, 55, 70, 75, 65, 84, 90, 150.])
z.sort()
n=len(z)
print(f'Решение 1 среднее арифметическое: {np.mean(z)}')
print(f'Решение 1 медиана: {np.median(z)}')
print(f'Решение 1 среднее квадратическое отклонение: {np.std(z)}')
print(f'Решение 1 смещенная дисперсия: {np.var(z)}')
print(f'Решение 1 несмещенная дисперсия: {np.var(z, ddof=1)}')
print(f'Решение 1 интерквартиальное растояние: {stats.iqr(z)}')
import seaborn as sns
sns.boxplot(data=z)


# Задача 2:
# В первом ящике находится 8 мячей, из которых 5 - белые. Во втором ящике - 12 мячей, из которых 5 белых. 
# Из первого ящика вытаскивают случайным образом два мяча, из второго - 4. 
# Какова вероятность того, что 3 мяча белые?
from math import factorial
def c(n,k): # сочетание
    return factorial(n)/(factorial(k)*factorial(n-k))
a1 = c(5,1)/c(8,2) + c(5,2)/c(12,4) - c(5,1)/c(8,2) * c(5,2)/c(12,4)
a2 = c(5,2)/c(8,2) + c(5,1)/c(12,4) - c(5,2)/c(8,2) * c(5,1)/c(12,4) 
print(f'Решение 2: {a1+a2}')

# Задача 3:
# На соревновании по биатлону один из трех спортсменов стреляет и попадает в мишень. 
# Вероятность попадания для первого спортсмена равна 0.9, для второго — 0.8, для третьего — 0.6. 
# Найти вероятность того, что выстрел произведен: 
#     a). первым спортсменом 
#     б). вторым спортсменом 
#     в). третьим спортсменом.
from math import factorial
def permutation(n): # перестановка
    return factorial(n)
hit1 =0.9
no_hit1=0.1
hit2=0.8
no_hit2=0.2
hit3=0.6
no_hit3=0.4
fire_hit = 1/permutation(3)
fire_no_hit = 1-fire_hit
a = fire_hit * hit1 / (fire_hit * hit1 + fire_no_hit * no_hit1)
b = fire_hit * hit2 / (fire_hit * hit2 + fire_no_hit * no_hit2)
c = fire_hit * hit3 / (fire_hit * hit3 + fire_no_hit * no_hit3)
print(f'Решение 3а: вер-ть, что выcтрел сделал 1й спортсмен: {a}')
print(f'Решение 3б: вер-ть, что выcтрел сделал 2й спортсмен: {b}')
print(f'Решение 3в: вер-ть, что выcтрел сделал 3й спортсмен: {c}')


# Задача 4:
# В университет на факультеты A и B поступило равное количество студентов, 
# а на факультет C студентов поступило столько же, сколько на A и B вместе. 
# Вероятность того, что студент факультета A сдаст первую сессию, равна 0.8. 
# Для студента факультета B эта вероятность равна 0.7, а для студента факультета C - 0.9. 
# Студент сдал первую сессию. 
# Какова вероятность, что он учится: 
#     a). на факультете A 
#     б). на факультете B 
#     в). на факультете C?
hitA =0.8
no_hitA=0.2
hitB=0.7
no_hitB=0.3
hitC=0.9
no_hitC=0.1
f_hit = 1/permutation(3)
f_no_hit = 1-fire_hit
a1 = f_hit * hitA / (f_hit * hitA + f_no_hit * no_hitA)
b1 = f_hit * hitB / (f_hit * hitB + f_no_hit * no_hitB)
c1 = f_hit * hitC / (f_hit * hitC + f_no_hit * no_hitC)
print(f'Решение 4а: {a1}')
print(f'Решение 4б: {b1}')
print(f'Решение 4в: {c1}')


# Задача 5:
# Устройство состоит из трех деталей. Для первой детали вероятность выйти из строя в первый месяц равна 0.1, 
# для второй - 0.2, для третьей - 0.25. 
# Какова вероятность того, что в первый месяц выйдут из строя: 
#     а). все детали 
#     б). только две детали 
#     в). хотя бы одна деталь 
#     г). от одной до двух деталей?

h1=0.1
h2=0.2
h3=0.25
print(f'Решение 5а: {h1+h2+h3-h1*h2*h3}')
print(f'Решение 5б: {(h1+h2-h1*h2)*(h1+h3-h1*h3)*(h2+h3-h2*h3)}')